version: '3.8'

services:
  # Accessibility Dashboard Service
  dashboard:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
        SCANNER_SERVICE_URL: ${SCANNER_SERVICE_URL:-http://scanner-service:3001}
        ENABLE_ANALYTICS: ${ENABLE_ANALYTICS:-true}
        DASHBOARD_TITLE: ${DASHBOARD_TITLE:-Accessibility Scanner Dashboard}
    
    container_name: accessibility-dashboard
    
    ports:
      - "${DASHBOARD_PORT:-3000}:3000"
    
    environment:
      # Core configuration
      NODE_ENV: production
      PORT: 3000
      HOSTNAME: 0.0.0.0
      
      # Scanner service connection
      SCANNER_SERVICE_URL: ${SCANNER_SERVICE_URL:-http://scanner-service:3001}
      SCANNER_SERVICE_TOKEN: ${SCANNER_SERVICE_TOKEN}
      SCANNER_API_VERSION: v2
      
      # Authentication
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      SESSION_TIMEOUT: ${SESSION_TIMEOUT:-3600}
      
      # Features
      ENABLE_ANALYTICS: ${ENABLE_ANALYTICS:-true}
      ENABLE_USER_MANAGEMENT: ${ENABLE_USER_MANAGEMENT:-true}
      ENABLE_SYSTEM_CONFIG: ${ENABLE_SYSTEM_CONFIG:-true}
      ENABLE_QUEUE_ADMIN: ${ENABLE_QUEUE_ADMIN:-true}
      
      # Monitoring
      LOG_LEVEL: ${LOG_LEVEL:-info}
      SENTRY_DSN: ${SENTRY_DSN}
      ENABLE_PERFORMANCE_MONITORING: ${ENABLE_PERFORMANCE_MONITORING:-true}
      
      # Caching
      CACHE_TTL: ${CACHE_TTL:-300}
      REDIS_URL: ${REDIS_URL}
      
      # Real-time updates
      REALTIME_UPDATE_INTERVAL: ${REALTIME_UPDATE_INTERVAL:-5}
      
      # UI customization
      COMPANY_NAME: ${COMPANY_NAME:-Accessibility Scanner}
      DASHBOARD_TITLE: ${DASHBOARD_TITLE:-Accessibility Scanner Dashboard}
      DEFAULT_THEME: ${DEFAULT_THEME:-light}
    
    volumes:
      # Persistent logs
      - dashboard_logs:/app/logs
      
      # Custom assets (optional)
      - ${CUSTOM_ASSETS_PATH:-./custom}:/app/custom:ro
    
    depends_on:
      - redis
    
    networks:
      - accessibility-network
    
    restart: unless-stopped
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"

  # Redis for caching and real-time features
  redis:
    image: redis:7-alpine
    container_name: accessibility-redis
    
    ports:
      - "${REDIS_PORT:-6379}:6379"
    
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    
    command: redis-server /usr/local/etc/redis/redis.conf
    
    networks:
      - accessibility-network
    
    restart: unless-stopped
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: accessibility-nginx
    
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    
    depends_on:
      - dashboard
    
    networks:
      - accessibility-network
    
    restart: unless-stopped
    
    profiles:
      - with-proxy

  # Log aggregation (optional)
  fluentd:
    image: fluentd:v1.16-1
    container_name: accessibility-fluentd
    
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    
    volumes:
      - ./fluentd/conf:/fluentd/etc:ro
      - fluentd_logs:/var/log/fluentd
    
    networks:
      - accessibility-network
    
    restart: unless-stopped
    
    profiles:
      - with-logging

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: accessibility-prometheus
    
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    
    networks:
      - accessibility-network
    
    restart: unless-stopped
    
    profiles:
      - with-monitoring

# Volumes for persistent data
volumes:
  dashboard_logs:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local
  fluentd_logs:
    driver: local
  prometheus_data:
    driver: local

# Networks
networks:
  accessibility-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16